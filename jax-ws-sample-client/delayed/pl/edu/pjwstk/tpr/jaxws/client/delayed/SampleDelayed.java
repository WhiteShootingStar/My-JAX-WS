
package pl.edu.pjwstk.tpr.jaxws.client.delayed;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SampleDelayed", targetNamespace = "http://delayed.jaxws.tpr.pjwstk.edu.pl/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SampleDelayed {


    /**
     * 
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<pl.edu.pjwstk.tpr.jaxws.client.delayed.ReplyDelayedResponse>
     */
    @WebMethod(operationName = "replyDelayed")
    @RequestWrapper(localName = "replyDelayed", targetNamespace = "http://delayed.jaxws.tpr.pjwstk.edu.pl/", className = "pl.edu.pjwstk.tpr.jaxws.client.delayed.ReplyDelayed")
    @ResponseWrapper(localName = "replyDelayedResponse", targetNamespace = "http://delayed.jaxws.tpr.pjwstk.edu.pl/", className = "pl.edu.pjwstk.tpr.jaxws.client.delayed.ReplyDelayedResponse")
    public Response<ReplyDelayedResponse> replyDelayedAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "replyDelayed")
    @RequestWrapper(localName = "replyDelayed", targetNamespace = "http://delayed.jaxws.tpr.pjwstk.edu.pl/", className = "pl.edu.pjwstk.tpr.jaxws.client.delayed.ReplyDelayed")
    @ResponseWrapper(localName = "replyDelayedResponse", targetNamespace = "http://delayed.jaxws.tpr.pjwstk.edu.pl/", className = "pl.edu.pjwstk.tpr.jaxws.client.delayed.ReplyDelayedResponse")
    public Future<?> replyDelayedAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<ReplyDelayedResponse> asyncHandler);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws TprException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "replyDelayed", targetNamespace = "http://delayed.jaxws.tpr.pjwstk.edu.pl/", className = "pl.edu.pjwstk.tpr.jaxws.client.delayed.ReplyDelayed")
    @ResponseWrapper(localName = "replyDelayedResponse", targetNamespace = "http://delayed.jaxws.tpr.pjwstk.edu.pl/", className = "pl.edu.pjwstk.tpr.jaxws.client.delayed.ReplyDelayedResponse")
    @Action(input = "http://delayed.jaxws.tpr.pjwstk.edu.pl/SampleDelayed/replyDelayedRequest", output = "http://delayed.jaxws.tpr.pjwstk.edu.pl/SampleDelayed/replyDelayedResponse", fault = {
        @FaultAction(className = TprException_Exception.class, value = "http://delayed.jaxws.tpr.pjwstk.edu.pl/SampleDelayed/replyDelayed/Fault/TprException")
    })
    public String replyDelayed(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws TprException_Exception
    ;

}
